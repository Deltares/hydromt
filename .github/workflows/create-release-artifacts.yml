
name: Create release artifacts
on:
  workflow_dispatch:
  # running this when PR opens we'll do in prep-release manually, see that file for more details
  push:
    branches:
      - 'release/**'
  workflow_run:
    workflows: [Create a new release branch]
    types:
      - completed

jobs:
  pypi:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.upload-pypi-release-artifacts.outputs.artifact-url }}
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: generate env
        run: |
          pip install tomli flit twine==6.0.1
          pip install -U packaging pkginfo
          pip install .

      - name: Build artifacts
        run: |
          git clean -xdf
          git restore -SW .
          flit build
          python -m twine check dist/*

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

      - uses: actions/upload-artifact@v4
        id: upload-pypi-release-artifacts
        with:
          name: pypi-release-artifacts
          path: dist
  docs:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.upload-docs-release-artifacts.outputs.artifact-url }}
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: prefix-dev/setup-pixi@v0.8.2
        with:
          pixi-version: "v0.41.1"

      - name: Generate docs
        run: pixi run --locked doc

      - uses: actions/upload-artifact@v4
        id: upload-docs-release-artifacts
        with:
          name: docs-release-artifacts
          path: docs/_build

  notify:
    needs:
      - pypi
      - docs
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add comment to PR
        env:
          GH_TOKEN: ${{ github.token }}
          pypi_url: ${{needs.pypi.outputs.url}}
          docs_url: ${{needs.docs.outputs.url}}
        run: |
          echo "The new release artifacts have been generated and tested. You can download and inspect them if you want by using the links below: " > comment.txt
          echo "    - pypi:   $pypi_url" >> comment.txt
          echo "    - docs:   $docs_url" >> comment.txt
          export PR_ID=$(gh pr list --state "open" --author "app/github-actions" --search "release"  --json "number" --jq '. | first | .number')

          gh pr comment $PR_ID --body-file comment.txt
