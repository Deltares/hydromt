
name: Finalise a new release

on:
  pull_request_review:
    types: [submitted]

jobs:
  publish-docker:
    if: github.event.review.state == 'APPROVED'
    name: Finalise docker release
    runs-on: ubuntu-24.04 # latest LTS release
    concurrency:
      group: NEW_RELEASE_DOCKER
      cancel-in-progress: false # don't abort while we might be creating a PR or something
    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/download-artifact@v4
        with:
          name: hydromt-docker-image
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.TEST_DOCKERHUB_USERNAME }}
          password: ${{ secrets.TEST_DOCKERHUB_TOKEN }}
      
      - name: Build and push ${{ matrix.flavour }} image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: ${{ matrix.flavour }} 
          push:  true
          tags: deltares/hydromt:${{ env.version }}-${{ matrix.flavour }}

      - name: Build and push latest image
        if: matrix.flavour == 'slim'
        uses: docker/build-push-action@v4
        with:
          context: .
          target: ${{ matrix.flavour }} 
          push:  true
          tags: deltares/hydromt:${{ env.version }}, deltares/hydromt:latest
  
  publish-pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: pypi-release-artifacts
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true

  publish-docs:    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
          name: docs-release-artifacts
          path: docs/_build
    - name: Upload to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3.9.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
        exclude_assets: .buildinfo,_sources/*,_examples/*.ipynb
        destination_dir: ./${{ env.DOC_VERSION }}
        keep_files: false
        full_commit_message: Deploy Release ${{ env.DOC_VERSION }} docs to GitHub Pages


  gh-release:
    needs:
      - publish-docker
      - publish-pypi
      - publish-docs
    runs-on: ubuntu-latest
    steps:
      - name: Merge release PR
        run: | 
          export PR_ID=$(gh pr list --state "open" --author "app/github-actions" --search "release"  --json "number" --jq '. | first | .number')
          if [ ! -z $PR_ID ]; then
          ## seting up git
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"

            # # create release branch
            git pull # make sure git doesn't reject our push becasue of unknown refs
            gh pr merge $PR_ID
            git pull
            git checkout main
            export RELEASE_VERSION=$(grep "version" hydromt/__init__.py | cut -d= -f 2 | tr -d "\" ")
            if [ ! -z $RELEASE_VERSION ]; then
              exit 1 # somthing went very wrong
            fi
            git tag v$NEW_VERSION
            # post release stuff so we don't forget
            sed -i "s/v$RELEASE_VERSION/Unreleased\n==========\n\nNew\n---\n\nChanged\n-------\n\nFixed\n-----\n\nDeprecated\n----------\n\nv$RELEASE_VERSION/" docs/changelog.rst
            sed -i 's/__version__.*=.*"\(.*\)".*/__version__ = "\1.dev0"/' hydromt/__init__.py

            git add hydromt/__init__.py docs/changelog.rst            
            git commit -m "Post release"
            git push main origin
