[project]
name = "hydromt"
version = "0.1.0"
description = "Add a short description here"
authors = ["Sam Vente <savente93@gmail.com>"]
channels = ["conda-forge"]
platforms = ["linux-64", "win-64"]

[tasks]

dev = { depends_on = [
  "dev-env-file",
  "dev-create-mamba-env",
  "dev-install-hydromt",
  "dev-install-pre-commit",
] }
dev-env-file = "python make_env.py full -n hydromt-dev"
dev-create-mamba-env = "mamba env remove -n hydromt-dev; mamba env create -f environment.yml"
dev-install-hydromt = "mamba run -n hydromt-dev pip install -e ."
dev-install-pre-commit = "mamba run -n hydromt-dev pre-commit install"

lint = { cmd = ["pre-commit", "run", "--all"] }
env-slim = { cmd = [
  "python",
  "make_env.py",
  "slim",
  "-o",
  "slim-environment.yml",
] }
env-full = { cmd = [
  "python",
  "make_env.py",
  "full",
  "-o",
  "full-environment.yml",
] }
env-min = { cmd = ["python", "make_env.py", "-o", "min-environment.yml"] }

docker-build-min = { cmd = [
  "docker",
  "build",
  "-t",
  "deltares/hydromt:min",
  "--target=min .",
], depends_on = "env-min" }
docker-build-full = { cmd = [
  "docker",
  "build",
  "-t",
  "deltares/hydromt:full",
  " --target=full .",
], depends_on = "env-full" }
docker-build-slim = { cmd = [
  "docker",
  "build",
  "-t",
  "deltares/hydromt:slim",
  " --target=slim .",
], depends_on = "env-slim" }
docker-build-latest = { cmd = [
  "docker",
  "build",
  "-t",
  "deltares/hydromt:latest",
  " --target=slim .",
], depends_on = "env-slim" }

docker-publish-min = { cmd = [
  "docker",
  "push",
  "deltares/hydromt:min",
], depends_on = [
  "docker-build-min ",
] }
docker-publish-slim = { cmd = [
  "docker",
  "push",
  "deltares/hydromt:slim",
], depends_on = [
  "docker-build-slim ",
] }
docker-publish-latest = { cmd = [
  "docker",
  "push",
  "deltares/hydromt:latest",
], depends_on = [
  "docker-build-latest ",
] }
docker-publish-full = { cmd = [
  "docker",
  "push",
  "deltares/hydromt:full",
], depends_on = [
  "docker-build-full ",
] }
docker-publish = { depends_on = [
  "docker-publish-min",
  "docker-publish-slim",
  "docker-publish-latest",
  "docker-publish-full",
] }
docker-clean = { cmd = ["docker", "system", "prune", "-f"] }

html = { cmd = ["sphinx-build", "-M", "html", "docs", "docs/_build", "-W"] }
docs = { depends_on = ["html"] }
doc = { depends_on = ["html"] }
serve = { cmd = ["python", "-m", "http.server", "-d", "docs/_build/html"] }


pypi = { depends_on = [
  "pypi-git-clean",
  "pypi-git-restore",
  "pypi-flit-build",
  "pypi-twine",
] }
pypi-git-clean = { cmd = ["git", "clean", "-xdf"] }
pypi-git-resore = { cmd = ["git", "restore", "-SW", "."] }
pypi-flit-build = { cmd = ["flit", "build"] }
pypi-twine = { cmd = ["python", "-m", "twine", "check", "dist/*"] }

# clean
clean = { depends_on = [
  # "clean-env-files",
  "clean-dist",
  "clean-docs-generated",
  "clean-docs-build",
  "clean-docs-exmaples",
] }
# clean-env-files = { cmd = ["rm", "-f", "*environment.yml"] }
clean-dist = { cmd = ["rm", "-rf", "dist"] }
clean-docs-generated = { cmd = ["rm", "-rf", "docs/_generated"] }
clean-docs-build = { cmd = ["rm", "-rf", "docs/_build"] }
clean-docs-exmaples = { cmd = ["rm", "-rf", "docs/examples"] }

test = { cmd = ["pytest"] }
test-lf = { cmd = ["pytest", "--lf", "--tb=short"] }
