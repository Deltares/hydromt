[build-system]
requires = ["flit_core >=3.4.0,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "hydromt"
authors = [
    {name = "Dirk Eilander", email = "dirk.eilander@deltares.nl"},
    {name = "Hélène Boisgontier", email = "helene.boisgontier@deltares.nl"},
    {name = "Sam Vente", email="sam.vente@deltares.nl"}
]
dependencies = [
    "affine", # Spatial rasterers coordinate system (afine) meta data also for BBOX coalision
    "bottleneck", # Speedup spearmen rank computation
    "click", # CLI configuration
    "dask", # distributed/lazy computing
    "entrypoints", # Provide access for Plugins
    "fsspec==2023.5.0", # enable cloud file systems likg GCS and S3
    "geopandas>=0.10", # pandas but geo, wraps fiona and shapely (look into ...)
    "gdal>=3.1", # enable the world (geospacial datate) raster and victor
    "fiona==1.8.22", #IO for vector and shape files
    "numpy>=1.20",
    "netcdf4", # netcfd IO
    "openpyxl", # excel IO  <- make optional
    "packaging", # to compare versions
    "pandas", # Dataframes
    "pyflwdir>=0.5.4", # Hight models and derivatives
    "pyproj", # projections for CRS
    "rasterio", # raster wrapper around gdal
    "requests", # donwload stuff
    "rioxarray", # wraps rasterio and xarray (maybe get rid of in future?) also does raster IO  writing metadata
    "shapely>=2.0.0", # geometry transforms
    "scipy", # it's scipy
    "universal_pathlib", # wraps fsspecs
    "xarray", # ndim data
    "xmltodict", # xml parser also used to read VRT
    "zarr", # zarr
]
# same author: rasterio fiona affine
requires-python = ">=3.8" # fix tests to support older versions
readme = "README.rst"
classifiers = [
    # https://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Hydrology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dynamic = ['version', 'description']

[project.optional-dependencies]
extra = [
    "pcraster", # could be removed. Old Wflow model was build on this
    "xugrid", # xarray wrapper for mesh processing
    "pygeos", # could maybe be removed? supersceded by shapely 2
    "pyet", # calc evapotraspiration, quite well used, used in all wflow models but domain specific
    "s3fs", # S3 file system
    "gcsfs" # google cloud file system
]
dev = [
    "black", # linting
    "ruff",
    "pre-commit"
]
test = [
	"pytest>=2.7.3", # testing
	"pytest-cov", #coverage
    "pytest-mock", # mocking
	"responses", # ????
    "testpath" # ???
]
doc = [
	"nbsphinx", #build notebooks in docs
    "pydata-sphinx-theme", # theme
    "sphinx", #build docks
    "sphinx_design", # layout
    "sphinx_autosummary_accessors", #layout
    # binder stuff
    "ipython", # remove?
    "ipywidgets", # remove?
    "jupyterlab",
    "cartopy", # plotting examples
    "notebook",
    "jupyterhub"
]


[project.urls]
Documentation = "https://deltares.github.io/hydromt"
Source = "https://github.com/Deltares/hydromt"

[project.scripts]
hydromt = "hydromt.cli.main:main"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88

# enable pydocstyle (E), pyflake (F) and isort (I), pytest-style (PT)
select = ["E","F","I","PT","D"]
ignore-init-module-imports = true
ignore = ["D211", "D213", "E741", "D105", "E712"]
exclude = ["docs"]

[tool.ruff.per-file-ignores]
"tests/**" = ["D103", "D100", "D104"]
"hydromt/__init__.py" = ["E402","F401", "F403"]
"hydromt/workflows/__init__.py" = ["F403"]
"hydromt/models/__init__.py" = ["F403", "F401", "F405"]
"hydromt/_compat.py" = ["F401"]
"tests/conftest.py" = ["E402"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.flit.sdist]
include = ["hydromt"]
exclude = ["docs", "examples", "envs", "tests", "binder", ".github"]

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore:distutils Version classes are deprecated:DeprecationWarning",
    "ignore:getargs:DeprecationWarning", # The 'u' format is deprecated. Use 'U' instead.
    "ignore:The *staticgeoms:DeprecationWarning",
    "ignore:The *staticmaps:DeprecationWarning",
    "ignore:The set_staticmaps:DeprecationWarning",
    "ignore:Adding a predefined data catalog:DeprecationWarning",
    "ignore:Shapely 2.0 is installed:UserWarning",
    "ignore::rasterio.errors.NotGeoreferencedWarning", # upstream issue with rasterio, see https://github.com/rasterio/rasterio/issues/2497
    "ignore:.*isinstance:numba.core.errors.NumbaExperimentalFeatureWarning" # soon to be solved upstream. see https://github.com/numba/numba/pull/8911
]
